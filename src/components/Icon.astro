---
import * as LucideIcons from 'lucide-react';
import * as simpleIcons from 'simple-icons'; // Import SimpleIcons

// Props passed to the Icon component
const { icon, iconType = 'lucide', size = 24, color = 'white' } = Astro.props;

// Helper types to restrict icon name to valid keys
type LucideIconKeys = keyof typeof LucideIcons;
type SimpleIconKeys = keyof typeof simpleIcons;

const toPascalCase = (str: string) =>
  str.replace(/(^\w|-\w)/g, (match) => match.replace('-', '').toUpperCase());

let IconComponent: any = null;

if (iconType === 'lucide') {
  // Ensure icon is a valid key for LucideIcons and cast
  const lucideIconName = toPascalCase(icon); // Convert lucideIconNames to PascalCase
  IconComponent = LucideIcons[lucideIconName as LucideIconKeys];
} else if (iconType === 'simple') {
  // Ensure icon is a valid key for SimpleIcons and cast
  const simpleIcon = simpleIcons[icon.toLowerCase() as SimpleIconKeys];
  IconComponent = simpleIcon ? simpleIcon.svg : null; // Get the SVG if available
}

// Handle the case when the icon is not found
if (!IconComponent) {
  console.error(`Icon ${icon} not found for ${iconType}`);
}
---

{iconType === 'lucide' && IconComponent && (
  <IconComponent color={color} size={size} />
)}

{iconType === 'simple' && IconComponent && (
  <span
    innerHTML={IconComponent} /* Inject raw SVG */
    style={`width: ${size}px; height: ${size}px; fill: ${color};`}
  />
)}
